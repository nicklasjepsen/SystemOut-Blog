<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Windows on SystemOut</title>
    <link>http://localhost:1313/categories/windows/</link>
    <description>Recent content in Windows on SystemOut</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>nmj@systemout.net (Nicklas Møller Jepsen)</managingEditor>
    <webMaster>nmj@systemout.net (Nicklas Møller Jepsen)</webMaster>
    <lastBuildDate>Mon, 29 Dec 2014 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/windows/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Backup to OneDrive or Other Cloud Storage Using a Simpel Script</title>
      <link>http://localhost:1313/2014/12/29/backup-to-onedrive-or-other-cloud-storage-using-a-simpel-script</link>
      <pubDate>Mon, 29 Dec 2014 00:00:00 +0000</pubDate>
      <author>nmj@systemout.net (Nicklas Møller Jepsen)</author>
      <guid>http://localhost:1313/2014/12/29/backup-to-onedrive-or-other-cloud-storage-using-a-simpel-script</guid>
      <description>

&lt;h2 id=&#34;getting-started:c3e3703607cf7f48e936440f5c5b5483&#34;&gt;Getting Started&lt;/h2&gt;

&lt;p&gt;I have a Office 365 Home/Family subscription that I use to get access to the latest version of the Office pack, get 1 TB (yes, tera byte) of included OneDrive storage and best of all; included in the subscription, is the possibility to add up to 4 other members of my family. That means that my girlfriend can get 1 TB online storage, without paying a dime, and for me that means I don&amp;rsquo;t have to worry about helping her backup all of her photos and other stuff.&lt;/p&gt;

&lt;p&gt;Now this is NOT a commecial for Microsoft/OneDrive, but the product they are offering are just amazing!
To backup your files to the cloud, as I will walk you through in this guide, you can use any of the existing cloud storage providers; Dropbox, OneDrive/SkyDrive, you name it.&lt;/p&gt;

&lt;p&gt;As a developer I have a ton of files on my system that I would hate to loose. This includes all the source code for the countless amount of projects I have worked upon in my spare time.
All of these files I like to be able to control where they are physically stored on my hard drive, for instance I like to have a folder in C:\Dev where I store all my development projects.
Surely I have set up a local subversion server hosted on my NAS, but what if the house burns to the ground?
Therefore I needed to set up a backup of the subversion files on the NAS to be copied to OneDrive.
Here&amp;rsquo;s how it&amp;rsquo;s done!&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a BAT file&lt;/li&gt;
&lt;li&gt;Create a Scheduled Task&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And that&amp;rsquo;s it!&lt;/p&gt;

&lt;h3 id=&#34;the-bat-script-robocopy:c3e3703607cf7f48e936440f5c5b5483&#34;&gt;The BAT Script, ROBOCOPY&lt;/h3&gt;

&lt;p&gt;I&amp;rsquo;m going to use ROBOCOPY, simple because it&amp;rsquo;s amazing and has some features that I need for things to work the way I intend.
Below is the command that we&amp;rsquo;re going to run, in all its flavor. I will explain each part of the command afterwards.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f0f0&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #888888&#34;&gt;robocopy X:\.subversion C:\Users\Nicklas\SkyDrive\Backup\MYNAS\.subversion /e /mir /log:C:\Users\Nicklas\SkyDrive\Backup\subversion_backup_log_%date:~-4,4%%date:~-10,2%%date:~-7,2%_%time:~0,2%-%time:~3,2%-%time:~6,2%.txt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;The syntax is as follows:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f0f0&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #888888&#34;&gt;robocopy [source] [destination] params &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Source and destination should be obvious.
The parameters explained:
/e : Copies all subfolders
/mir : Will only copy newer/added files. Making the backup kind of incremental.
/log : The path to store the log file.&lt;/p&gt;

&lt;p&gt;Speaking of the log file; I using the syntaxt above to get a timestamp to put in the file name of the log file - otherwise it will just get overridden each time the backup is running. Depending on your Windows locale, that syntaxt might be different.&lt;/p&gt;

&lt;h3 id=&#34;scheduled-task:c3e3703607cf7f48e936440f5c5b5483&#34;&gt;Scheduled Task&lt;/h3&gt;

&lt;p&gt;Open the the Task Scheduler, goto Run and enter:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f0f0&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;Taskschd.msc
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Choose Create Task.
Give it a name and select the &lt;strong&gt;Triggers tab&lt;/strong&gt; and then &lt;strong&gt;New&lt;/strong&gt;. Select &lt;strong&gt;Daily&lt;/strong&gt; and leave the rest as defaults.
Select the &lt;strong&gt;Actions tab&lt;/strong&gt; and then &lt;strong&gt;New&lt;/strong&gt;.
Enter the path to the BAT script created in the previous step (I have stored mine in my OneDrive backup folder for ease of access).
Then the last thing: Go to &lt;strong&gt;Settings tab&lt;/strong&gt; click the &lt;strong&gt;If the task fails, restart every&lt;/strong&gt; to make sure that the backup will be performed.&lt;/p&gt;

&lt;p&gt;And we&amp;rsquo;re done!&lt;/p&gt;

&lt;h2 id=&#34;important:c3e3703607cf7f48e936440f5c5b5483&#34;&gt;Important&lt;/h2&gt;

&lt;p&gt;This wil only copy/replace new and existing files, it will not delete files no longer in the source.
A fix for this is to manually &amp;ldquo;resetting&amp;rdquo; the destination files by deleting them and running a full backup from scratch one in a while.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>